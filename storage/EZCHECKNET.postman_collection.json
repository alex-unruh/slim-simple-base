{
	"info": {
		"_postman_id": "ee84dfde-58f7-40b0-9c6f-d6694c7115c7",
		"name": "EZCHECKNET",
		"description": "## Sincronica ezCheckNET\n\nAPI's do sistema Sincronixa ezCheckNET\n\nRevisão: 16/07/2021 - Alexandre Unruh\n\nSincronica Sistemas Integrados |  \n© Todos os direitos reservados\n\n#### Variáveis da coleção:\n\n*   **url** (string):  \n    Endereço da raiz do sistema: ex: *ezchecknet.sincronica.com.br* ou *localhost/ezchecknet*\n*   **usuario** (string): nome de usuário para autenticação\n*   **senha** (string): senha do usuário para autenticação\n*   **ambiente** (string): ambiente (previamente configurado)\n*   **token** (string): token gerado para múltiplas requisições. São gerados em serviços que solicitam usuário e senha em um primeiro momento e podem ser usados até expirarem. Em alguns raros casos, podem expirar em um único uso, independente de tempo, dependendo do serviço.\n*   **idapp** (string): Identificador do aplicativo mobile para ativação junto aos sistemas de ativação Sincronica\n*   **chave** (string): Chave para ativação de aplicativos mobile a ser usada em conjunto com o *idapp*\n*   **imgf** (string): Base 64 da imagem de frente de um cheque\n*   **imgv** (string): Base 64 da imagem de verso de um cheque\n*   **idunicod** (string): Identificador único para um cheque\n    \n\n#### Parâmetro service\n\nTodas as API's de autenticação desse sistema (para geração de tokens) podem ser enviadas para o mesmo endpoint (api/services.php) especificando-se no corpo (json) da requisição o parâmetro **service**. Ex:\n\n```\n{\n    \"service\": \"isLive\",\n    \"params\": {\n        \"username\": \"usuario\",\n        \"password\": \"senha\",\n        \"ambiente\": \"nome_do_ambiente\"\n    }\n}\n\n```\n\n#### Retorno em caso de erro:\n\nO HTTP Status Code será sempre **401** para não autorizado, **400** para requisições com má formação ou **500** para erros internos do serviço.\n\nSe um serviço tiver um modelo de retorno em caso de erro específico, esse modelo estará documentado no próprio serviço e um modelo de retorno estará anexado a documentação. Caso contrário o modelo será sempre o default apresentado abaixo.\n\nO modelo default para retorno em casos de erro tem a seguinte formação:\n\n***status*** (boolean): false\n\n***response*** (array de objetos)\n\nNo modelo Deafult apenas um objeto é retornado:\n\n*   ***code*** (integer): Código do erro\n*   ***message*** (string): Descrição do erro\n    \n\nExemplo de retorno de erro do modelo default:\n\n```\n{\n    \"status\": false,\n    \"response\": [\n        {\n            \"code\": 2,\n            \"msg\": \"Usuario ou senha invalidos\"\n        }\n    ]\n}\n\n```\n\n#### Retorno em caso de sucesso\n\nO HTTP Status Code será sempre **200**\n\nCada serviço tem um modelo de retorno documentado e um exemplo anexado",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "w32",
			"item": [
				{
					"name": "session import",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"service\": \"sessionImport\",\r\n    \"params\": {\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"ambiente\": \"{{ambiente}}\",\r\n        \"status\": 1\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/services.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"services.php"
							]
						},
						"description": "## Session Import\n\nDevolve informações sobre remessas pendentes de importação de acordo com o status solicitado. Esse serviço pode ser solicitado tanto pelo ezCheck w32 situado no backoffice Sincronica quando no ezCheck w32 situado na estrutura do cliente, o que difere um de outro é o parâmetro ***status***\n\n#### Parâmetros:\n\n*   ***username, password e ambiente***: vide documentação geral da collection\n*   ***status*** (integer): 1 => pesquisa por remessas pendentes de importação para o backoffice Sincronica, ou seja, na primeira etapa de conferência após a captura dos cheques. 2 => Pesquisa por remessas já conferidas no backoffice Sincronica.\n    \n\n#### Retorno em caso de sucesso:\n\n*   ***status*** (boolean): true\n*   ***msg*** (string): Mensagem de sucesso\n*   ***token*** (string): token a ser usado na próxima requisição de importação\n*   ***remessa*** (object): Dados de uma remessa disponível para importação. Após essa consulta a remessa devolvida ficará indisponível por alguns minutos. Ela está tecnicamente \"alocada\" para o mordomo (através do token) que fez a consulta. Isso ocorre para evitar que mais de um mordomo importe a mesma remessa. Deve-se atentar, além do token, para os dados contidos no objeto de retorno \"dadosAux\". Dentro desse objeto há um parâmetro \"cheques\" que contem os identificadores dos cheques pertencentes a essa remessa. Vide exemplo de retorno 200 em anexo."
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"service\": \"sessionImport\",\r\n    \"params\": {\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"ambiente\": \"{{ambiente}}\",\r\n        \"status\": 1\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/services.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"services.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Fri, 10 Dec 2021 13:38:29 GMT"
								},
								{
									"key": "Content-Length",
									"value": "893"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"response\": {\n        \"msg\": \"Token de sessao gerado com sucesso\",\n        \"token\": \"-Q6WTJgXoAMMSlO_oUGLAw\",\n        \"remessa\": {\n            \"AUTOSEQUENCIAL\": \"51\",\n            \"IDFILIAL\": \"1\",\n            \"IDUSUARIO\": \"1\",\n            \"USUARIO\": \"admin\",\n            \"IP_ORIGEM\": \"::1\",\n            \"REMESSA\": \"0\",\n            \"MODELO\": \"0\",\n            \"CAIXA\": \"1\",\n            \"LOCALIZADOR\": \"178736278907827\",\n            \"IDENTIFICADOR\": \"0\",\n            \"ORIGEM\": \"100\",\n            \"QUANT\": \"1\",\n            \"TM_INI\": \"2021-11-30 14:05:57.000\",\n            \"TM_FIM\": \"2021-11-30 14:05:57.000\",\n            \"TM_IMP\": \"1900-01-01 00:00:00.000\",\n            \"TM_PRE\": \"1900-01-01 00:00:00.000\",\n            \"TM_LOCK\": \"2021-12-10 10:43:27.000\",\n            \"CANCELADO\": \"0\",\n            \"CANCELUSER\": \"0\",\n            \"IMPORTADO\": \"0\",\n            \"UUID\": \"cfee9b2bb8fd4c9438a234b49efe8ff2\",\n            \"BORDERO\": \"0\",\n            \"BANCODEP\": \"1\",\n            \"AGENDEP\": \"1234\",\n            \"CONTADEP\": \"123456\",\n            \"CODIGODEP\": \"0\",\n            \"FILIALDEP\": \"0\",\n            \"VALOR\": \"100\",\n            \"DADOSAUX\": \"{\\\"dado1\\\":\\\"valor-para-o-dado-1\\\",\\\"dado2\\\":\\\"valor-para-o-dado-2\\\",\\\"cheques\\\":\\\"63\\\"}\",\n            \"SINCRONIZA\": \"0\",\n            \"TM_SINC\": \"1900-01-01 00:00:00.000\",\n            \"STATUS\": \"0\",\n            \"ID_LOCK\": \"1010321151\"\n        }\n    }\n}"
						},
						{
							"name": "200 - Nenhuma remessa",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"service\": \"sessionImport\",\r\n    \"params\": {\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"ambiente\": \"{{ambiente}}\",\r\n        \"status\": 2\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/services.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"services.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Fri, 10 Dec 2021 13:49:58 GMT"
								},
								{
									"key": "Content-Length",
									"value": "89"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": false,\n    \"response\": [\n        {\n            \"code\": 17,\n            \"msg\": \"Nao existem remessas a serem importadas\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "import",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"cheques\": \"63\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/import.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"import.php"
							]
						},
						"description": "## Import\n\nDevolve os cheques solicitados para importação. A consulta de quais cheques estão disponíveis para importação assim como a obtenção do token para essa consulta deve ser realizada previamente através do serviço \"***session import***\".\n\n#### Parâmetros:\n\n*   ***token*** (string): token obtido através do serviço de consulta de cheques pendentes (***session import***)\n*   ***cheques*** (string): Identificadores dos cheques a serem importados separados por vírgula. Esses identificadores estão presentes no retorno do serviço \"***session import***\" (vide documentação). Ex:\n    \"cheques\" : \"63,64,65\" Retornará os metadados e imagens dos cheques de identificador 63, 64 e 65\n    \n\nRetorno em caso de sucesso:\n\n*   ***status*** (boolean): true\n*   ***response*** (array): Array contendo um objeto json para cada cheque solicitado. O objeto contem metadados e imagens\n    \n\nVide exemplo de retorno em anexo."
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"cheques\": \"63\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/import.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"import.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 13 Dec 2021 13:19:03 GMT"
								},
								{
									"key": "Content-Length",
									"value": "26112"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"response\": [\n        {\n            \"63\": {\n                \"AUTOSEQUENCIAL\": \"63\",\n                \"IDREMESSA\": \"0\",\n                \"TIPODOC\": \"0\",\n                \"MODELO\": \"0\",\n                \"XMLDOC\": \"0\",\n                \"TM_CAP\": \"2021-11-30 14:05:57.000\",\n                \"TIPOIMGF\": \"4\",\n                \"TIPOIMGV\": \"4\",\n                \"DPIIMGF\": \"200\",\n                \"DPIIMGV\": \"200\",\n                \"CERTIFICADA\": \"0\",\n                \"CRIPTOGRAFIA\": \"0\",\n                \"CANCELADO\": \"0\",\n                \"BANCOCMC7\": \"85\",\n                \"AGENCIACMC7\": \"102\",\n                \"COMPECMC7\": \"16\",\n                \"NUMEROCMC7\": \"6\",\n                \"CONTACMC7\": \"126306\",\n                \"VALOR\": \"100\",\n                \"CPFCNPJ\": \"0\",\n                \"DATAVENC\": \"1900-01-01 00:00:00.000\",\n                \"CMC7\": \"085010250160000065500001263060                    \",\n                \"VALOREXT\": \"100\",\n                \"SEQDOCTO\": \"0\",\n                \"STATUS\": \"2\",\n                \"TRANSMITIDO\": \"0\",\n                \"CODNCONF\": \"0\",\n                \"FORMALIZA\": \"0\",\n                \"NSU\": \"0\",\n                \"SEQORIGEM\": \"0\",\n                \"IDENTIFICADOR\": \"e46d2a5600869f1ac0d5bcdffe858c3c\",\n                \"DATA_EMISSAO\": \"1900-01-01 00:00:00.000\",\n                \"CLIENTE_DESDE\": \"1900-01-01 00:00:00.000\",\n                \"ID_LOCK\": \"0\",\n                \"UUID_REMESSA\": \"cfee9b2bb8fd4c9438a234b49efe8ff2\",\n                \"IMAGEM\": {\n                    \"IDDOCTO\": \"63\",\n                    \"SZF\": \"18880\",\n                    \"SZV\": \"4320\",\n                    \"IMGF\": \"\",\n                    \"IMGV\": \"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\",\n                    \"SZHF\": \"0\",\n                    \"SZHV\": \"0\",\n                    \"HASHF\": \"0\",\n                    \"HASHV\": \"0\"\n                }\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "session update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"service\": \"sessionUpdate\",\r\n    \"params\": {\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"ambiente\": \"{{ambiente}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/services.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"services.php"
							]
						},
						"description": "## Session Update\n\nRetorna um token para futuras requisições ao serviço ***update***\n\n#### Parâmetros:\n\n*   ***username, password e ambiente***: vide documentação geral da collection\n    \n\nResposta em caso de sucesso:\n\n*   status (boolean): true\n*   response (object)\n    *   msg (string): Mensagem de sucesso\n    *   token (string): token a ser envido em futuras requisições de update\n\nVide exemplo de retorno em anexo."
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"service\": \"sessionUpdate\",\r\n    \"params\": {\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"ambiente\": \"{{ambiente}}\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/services.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"services.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 13 Dec 2021 14:08:38 GMT"
								},
								{
									"key": "Content-Length",
									"value": "125"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"response\": {\n        \"msg\": \"Token de sessao gerado com sucesso\",\n        \"token\": \"mj926_E0TPPD-vf6eV85sej4MzIDvhDElfuh7FRQNnk\"\n    }\n}"
						}
					]
				},
				{
					"name": "update remessa",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"tabela\": \"CTRLWS\",\r\n    \"campos\": {\r\n        \"STATUS\": 1,\r\n        \"ID_LOCK\": 0,\r\n        \"TM_IMP\": \"2021-12-13 17:24:17.000\",\r\n        \"IMPORTADO\": 1\r\n    },\r\n    \"condicoes\": {\r\n        \"UUID=\": \"cfee9b2bb8fd4c9438a234b49efe8ff2\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/update.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"update.php"
							]
						},
						"description": "## Update Remessa\n\nAtualiza os dados de uma remessa específica (tabela CTRLWS). O sistema ezCheck w32 usa esse serviço para atualizar dados de uma remessa importada, processada e importada no Canoa. (status 1, 2 e 3 especificamente).\n\n#### Parâmetros:\n\n*   ***token*** (string): token gerado pelo serviço ***session update***\n*   ***tabela*** (string): CTRLWS\n*   ***campos*** (object): objeto onde as chaves representam as colunas da tabela CTRLWS a serem modificadas e os valores são os novos dados a serem atualizados. O campo STATUS deve seguir a ordem de 1 => remessa importada, 2 => remessa finalizada no backoffice e 3 => remessa importada nas bases Canoa\n    \n\n#### Retorno em caso de sucesso:\n\n*   ***status*** (boolean): true\n    \n\nVide exemplos de envios e retornos para atualizações de remessa em anexo."
					},
					"response": [
						{
							"name": "200 - Remessa importada",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"tabela\": \"CTRLWS\",\r\n    \"campos\": {\r\n        \"STATUS\": 1,\r\n        \"ID_LOCK\": 0,\r\n        \"TM_IMP\": \"2021-12-13 17:24:17.000\",\r\n        \"IMPORTADO\": 1\r\n    },\r\n    \"condicoes\": {\r\n        \"UUID=\": \"cfee9b2bb8fd4c9438a234b49efe8ff2\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/update.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"update.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 13 Dec 2021 14:35:30 GMT"
								},
								{
									"key": "Content-Length",
									"value": "15"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true\n}"
						},
						{
							"name": "200 - Remessa processada",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"tabela\": \"CTRLWS\",\r\n    \"campos\": {\r\n        \"STATUS\": 2,\r\n        \"ID_LOCK\": 0\r\n    },\r\n    \"condicoes\": {\r\n        \"UUID=\": \"cfee9b2bb8fd4c9438a234b49efe8ff2\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/update.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"update.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 13 Dec 2021 14:52:14 GMT"
								},
								{
									"key": "Content-Length",
									"value": "15"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true\n}"
						},
						{
							"name": "200 - Remessa importada no Canoa",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"tabela\": \"CTRLWS\",\r\n    \"campos\": {\r\n        \"STATUS\": 3,\r\n        \"ID_LOCK\": 0\r\n    },\r\n    \"condicoes\": {\r\n        \"UUID=\": \"cfee9b2bb8fd4c9438a234b49efe8ff2\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/update.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"update.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 13 Dec 2021 14:52:55 GMT"
								},
								{
									"key": "Content-Length",
									"value": "15"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true\n}"
						}
					]
				},
				{
					"name": "update cheque",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"tabela\": \"DOCSWS\",\r\n    \"campos\": {\r\n        \"STATUS\": 2,\r\n    \t\"DPIIMGF\" : 200,\r\n    \t\"DPIIMGV\" : 200,\r\n    \t\"TIPOIMGF\": 4,\r\n    \t\"TIPOIMGV\": 4,\r\n        \"CANCELADO\": 0,\r\n        \"CERTIFICADA\": 0,\r\n        \"COMPECMC7\": 16,\r\n        \"BANCOCMC7\": 85,\r\n        \"AGENCIACMC7\": 102,\r\n        \"CONTACMC7\": 126306,\r\n        \"NUMEROCMC7\": 6,\r\n        \"VALOR\": 100,\r\n        \"VALOREXT\": 100,\r\n        \"CODNCONF\": 0,\r\n        \"FORMALIZA\": 38,\r\n        \"CMC7\": \"085010250160000065500001263060\"\r\n    },\r\n    \"condicoes\": {\r\n        \"AUTOSEQUENCIAL=\": 63\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/update.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"update.php"
							]
						},
						"description": "## Update Cheque\n\nAtualiza os dados de um cheque específico (tabela DOCSWS).\n\n#### Parâmetros:\n\n*   ***token*** (string): token gerado pelo serviço ***session update***\n*   ***tabela*** (string): DOCSWS\n*   ***campos*** (object): objeto onde as chaves representam as colunas da tabela DOCSWS a serem modificadas e os valores são os novos dados a serem atualizados. O campo STATUS deve seguir a ordem de 0 => cheque pendente de importação para o o backoffice, 1 => cheque aprovado e 2 => cheque rejeitado\n    \n\n#### Retorno em caso de sucesso:\n\n*   ***status*** (boolean): true\n    \n\nVide exemplos de envios e retornos para atualizações de cheques em anexo."
					},
					"response": [
						{
							"name": "200 - Cheque aprovado",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"tabela\": \"DOCSWS\",\r\n    \"campos\": {\r\n        \"STATUS\": 1,\r\n    \t\"TM_CAP\"  : \"2021-12-13 17:24:17.000\",\r\n    \t\"DPIIMGF\" : 200,\r\n    \t\"DPIIMGV\" : 200,\r\n    \t\"TIPOIMGF\": 4,\r\n    \t\"TIPOIMGV\": 4,\r\n        \"CANCELADO\": 0,\r\n        \"CERTIFICADA\": 0,\r\n        \"COMPECMC7\": 16,\r\n        \"BANCOCMC7\": 85,\r\n        \"AGENCIACMC7\": 102,\r\n        \"CONTACMC7\": 126306,\r\n        \"NUMEROCMC7\": 6,\r\n        \"VALOR\": 100,\r\n        \"VALOREXT\": 100,\r\n        \"CODNCONF\": 0,\r\n        \"FORMALIZA\": 0,\r\n        \"CMC7\": \"085010250160000065500001263060\"\r\n    },\r\n    \"condicoes\": {\r\n        \"AUTOSEQUENCIAL=\": 63\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/update.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"update.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 13 Dec 2021 14:44:44 GMT"
								},
								{
									"key": "Content-Length",
									"value": "15"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true\n}"
						},
						{
							"name": "200 - Cheque rejeitado",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"tabela\": \"DOCSWS\",\r\n    \"campos\": {\r\n        \"STATUS\": 2,\r\n    \t\"DPIIMGF\" : 200,\r\n    \t\"DPIIMGV\" : 200,\r\n    \t\"TIPOIMGF\": 4,\r\n    \t\"TIPOIMGV\": 4,\r\n        \"CANCELADO\": 0,\r\n        \"CERTIFICADA\": 0,\r\n        \"COMPECMC7\": 16,\r\n        \"BANCOCMC7\": 85,\r\n        \"AGENCIACMC7\": 102,\r\n        \"CONTACMC7\": 126306,\r\n        \"NUMEROCMC7\": 6,\r\n        \"VALOR\": 100,\r\n        \"VALOREXT\": 100,\r\n        \"CODNCONF\": 0,\r\n        \"FORMALIZA\": 38,\r\n        \"CMC7\": \"085010250160000065500001263060\"\r\n    },\r\n    \"condicoes\": {\r\n        \"AUTOSEQUENCIAL=\": 63\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/update.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"update.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 13 Dec 2021 14:46:12 GMT"
								},
								{
									"key": "Content-Length",
									"value": "15"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true\n}"
						}
					]
				},
				{
					"name": "clear records",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"data\": \"2021-12-02\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/regclear.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"regclear.php"
							]
						},
						"description": "## Clear Records\n\nServiço utilizado para efeitos de manutenção (limpeza) nas tabelas WS.\n\n#### Parâmetros:\n\n*   ***token*** (string): token gerado através do serviço session update\n*   ***data*** (string): Data no formato YYYY-MM-DD a partir da qual os registros devem ser excluídos retroativamente. Ou seja, ao enviar a data 2021-11-30 todos os registros de remessas, cheques e imagens, exceto os enviados após 01 de de dezembro de 2021, serão excluídos das tabelas CTRLWS, DOCSWS e IMGSWS pelo ezCheck.Net\n    \n\nRetorno em caso de sucesso:\n\n*   status (boolean): true\n*   data_requisitada (string): Data informadfa na requisição\n*   registros_removidos (numeric): Quantidade de registros de remessa excluídos (conesequentemente de cheques e imagens pertencentes a essa remessa)\n    \n\nVide exemplo de retorno com sucesso em anexo"
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"data\": \"2021-12-02\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/regclear.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"regclear.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 13 Dec 2021 15:05:28 GMT"
								},
								{
									"key": "Content-Length",
									"value": "71"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"data_requisitada\": \"2021-12-02\",\n    \"registros_removidos\": 6\n}"
						}
					]
				}
			],
			"description": "API's de uso dos sistemas w32 Sincronica"
		},
		{
			"name": "Ocr",
			"item": [
				{
					"name": "ocri deep watch",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"api_endpoint\": \"http://192.168.2.33:5555/api/v1/recognition\",\r\n    \"data\": {\r\n        \"uuid\": \"1\",\r\n        \"image\": \"{{imgf}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/ocr7.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ocr7.php"
							]
						},
						"description": "## OCRI Deep Watch\n\nRetorna dados reconhecidos em imagens pelo serviço Deep Watch\n\n#### Parâmetros:\n\n*   ***api_endpoint*** (string): endpoint da API Deep Watch a ser consultada pelo ezCheck.Net. Esse parâmetro é enviado apenas através de requisições externas com via Postman, por exemplo. Em requisições enviadas vis Ajax de dentro do próprio ezCheck.Net o parâmetro será extraído de arquivos de config internos.\n*   ***data*** (object): Dados da imagem\n    *   ***uuid*** (string): Identificador único para a imagem\n    *   ***image*** (string): base64 da imagem a ser analisada\n\n#### Retorno em caso de sucesso:\n\n*   ***status*** (boolean): true\n*   ***uuid*** (string): identificador da imagem enviado na requisição\n*   ***cmc7*** (string): código CMC7 reconhecido do cheque\n*   ***response*** (object): dados extraídos da imagem. Esse campo retornará uma série de objetos contendo dois dados cada: ***score e value.*** O score é um valor estimado de \"acertividade\" no reconhecimento do dado variando de 0 a 1000 onde, quanto maior o valor, mais chances de o reconhecimento do dado estar correto. Os dados retornados são: **CMC7, DataEmissao, LinhaSuperior, TemAssinatura, TemDataEmissao, TemNominativo, ValorExtenso e ValorNumerico**\n    \n\nVide exemplos de retorno em anexo"
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"api_endpoint\": \"http://192.168.2.33:5555/api/v1/recognition\",\r\n    \"data\": {\r\n        \"uuid\": \"1\",\r\n        \"image\": \"{{imgf}}\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/ocr7.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"ocr7.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT"
								},
								{
									"key": "Set-Cookie",
									"value": "PHPSESSID=hc38g1vm4d71g6u5qa1cg0hml7; path=/; HttpOnly"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 13 Dec 2021 17:25:59 GMT"
								},
								{
									"key": "Content-Length",
									"value": "551"
								}
							],
							"cookie": [],
							"body": "{\n    \"elapsed_time\": 5506,\n    \"response\": {\n        \"CMC7\": {\n            \"score\": 1000,\n            \"value\": \"356119710180100235900050017516\"\n        },\n        \"DataEmissao\": {\n            \"score\": 10,\n            \"value\": \"20030802\"\n        },\n        \"LinhaSuperior\": {\n            \"score\": 540,\n            \"value\": \"018 356 1197 1 0500175 1 3 9 ? ? ? 0100231 4\"\n        },\n        \"TemAssinatura\": {\n            \"score\": 500,\n            \"value\": \"0\"\n        },\n        \"TemDataEmissao\": {\n            \"score\": 770,\n            \"value\": \"1\"\n        },\n        \"TemNominativo\": {\n            \"score\": 1000,\n            \"value\": \"1\"\n        },\n        \"ValorExtenso\": {\n            \"score\": 0,\n            \"value\": \"108000\"\n        },\n        \"ValorNumerico\": {\n            \"score\": 770,\n            \"value\": \"100234\"\n        },\n        \"elapsed_time\": \"4.423009\",\n        \"status\": \"0\"\n    },\n    \"status\": true,\n    \"uuid\": \"1\",\n    \"cmc7\": \"356119710180100235900050017516\"\n}"
						},
						{
							"name": "500",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"api_endpoint\": \"http://192.168.2.33:5555/api/v1/recognition\",\r\n    \"data\": {\r\n        \"uuid\": \"1\",\r\n        \"image\": \"asdlksajdlsajldkj\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/ocr7.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"ocr7.php"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 13 Dec 2021 17:47:06 GMT"
								},
								{
									"key": "Content-Length",
									"value": "54"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": false,\n    \"response\": \"Erro interno no servidor\"\n}"
						}
					]
				},
				{
					"name": "ocr7 cmc7",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"api_endpoint\": \"http://191.242.241.242:9999/api/v1/cheque/ocr7\",\r\n    \"data\": {\r\n        \"uuid\": \"1\",\r\n        \"imagem\": \"{{imgf}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/ocr7.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ocr7.php"
							]
						},
						"description": "## OCR7 CMC7\n\nRetorna o cmc7 reconhecido em uma imagem pelo serviço OCR7 CMC7\n\n#### Parâmetros:\n\n*   ***api_endpoint*** (string): endpoint da API Deep Watch a ser consultada pelo ezCheck.Net. Esse parâmetro é enviado apenas através de requisições externas com via Postman, por exemplo. Em requisições enviadas vis Ajax de dentro do próprio ezCheck.Net o parâmetro será extraído de arquivos de config internos.\n*   ***data*** (object): Dados da imagem\n    *   ***uuid*** (string): Identificador único para a imagem\n    *   ***image*** (string): base64 da imagem a ser analisada\n\n#### Retorno em caso de sucesso:\n\n*   ***status*** (boolean): true\n*   ***uuid*** (string): identificador da imagem enviado na requisição\n*   ***cmc7*** (string): código CMC7 reconhecido do cheque\n    \n\nVide exemplos de retorno em anexo"
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"api_endpoint\": \"http://191.242.241.242:9999/api/v1/cheque/ocr7\",\r\n    \"data\": {\r\n        \"uuid\": \"1\",\r\n        \"imagem\": \"{{imgf}}\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/ocr7.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"ocr7.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 13 Dec 2021 17:27:19 GMT"
								},
								{
									"key": "Content-Length",
									"value": "66"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"uuid\": \"1\",\n    \"cmc7\": \"356119710180100235900050017516\"\n}"
						},
						{
							"name": "200 - Erro na imagem",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"api_endpoint\": \"http://191.242.241.242:9999/api/v1/cheque/ocr7\",\r\n    \"data\": {\r\n        \"uuid\": \"1\",\r\n        \"imagem\": \"3131321321554vsdfs\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/ocr7.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"ocr7.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Expires",
									"value": "Thu, 19 Nov 1981 08:52:00 GMT"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 13 Dec 2021 17:54:24 GMT"
								},
								{
									"key": "Content-Length",
									"value": "76"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": false,\n    \"uuid\": \"1\",\n    \"mensagem\": \"Falha ao carregar imagem de retorno\"\n}"
						}
					]
				}
			],
			"description": "Esses serviços são utilizados pelo sistema ezCheck.Net através da digitalização de cheques via web. Requisições externas tem efeitos apenas para debug. Se o sistema ezCheck.Net estiver em modo AMBIENTE DE PRODUÇÃO um erro será retornado ao enviar externamente."
		},
		{
			"name": "Sdk",
			"item": [
				{
					"name": "ativacao sdk",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "versao",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"idapp\":\"{{idapp}}\",\r\n  \t\"chave\":\"{{chave}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/ativacaosdk.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ativacaosdk.php"
							]
						},
						"description": "## Ativação SDK\n\nTem como objetivo fazer a ponte entre o SDK Mobile com o sistema de ativações Sincronica para ativar componentes, dependências e atualizar cotas de consumo.\n\n#### Parâmetros:\n\n*   ***idapp*** (string): Identificador do aplicativo\n*   ***chave*** (string): Chave de ativação para o aplicativo fornecida pelo sistema de ativações Sincronica\n*   ***capFrente*** (integer): Quantidade de imagens de frente capturadas\n*   ***capVerso*** (integer): Quantidade de imagens de verso capturadas\n    \n\n#### Headers:\n\n*   ***versao*** (integer): 2 para nova versão da ativação devolvendo chaves diferentes para componentes como A2IA e Deep Watch. Não enviar o parâmetro ou enviar com valor igual a 1 irá retornar apenas uma chave de ativação (deprecated)\n    \n\n#### Resposta em caso de sucesso:\n\n*   status (boolean): true\n*   response (object)\n    *   ativacao (boolean): true\n    *   expiracao (string): Data de expiração da chave no formato YYYYMMDD\n        *   licencas (array): Array de objetos contendo informação de licenças de componentes como A2IA, Deep Watch, etc.\n            *   componente (integer): Componente retornado sendo, atualmente, 1 => A2IA, 2 => Deep Watch Android e 3 => Deep Watch IOS\n            *   chave (string): Chave de ativação para o componente\n            *   chaveCriptografada (integer): 0 => Chave não criptografada. 1 => Chave criptografada\n            *   componenteExpiracao (string): Data de expiração da chave do comonente no formato YYYYMMDD"
					},
					"response": [
						{
							"name": "200 - Chave inválida",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "versao",
										"value": "2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"idapp\":\"{{idapp}}\",\r\n  \t\"chave\":\"{{chave}}\",\r\n    \"capFrente\": 5,\r\n    \"capVerso\": 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/ativacaosdk.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"ativacaosdk.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Thu, 09 Dec 2021 14:59:10 GMT"
								},
								{
									"key": "Content-Length",
									"value": "62"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": false,\n    \"response\": {\n        \"code\": 16,\n        \"msg\": \"Chave Invalida\"\n    }\n}"
						},
						{
							"name": "200 - Chave válida",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "versao",
										"value": "2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"idapp\":\"{{idapp}}\",\r\n  \t\"chave\":\"{{chave}}\",\r\n    \"capFrente\": 5,\r\n    \"capVerso\": 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/ativacaosdk.php",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"ativacaosdk.php"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Thu, 09 Dec 2021 17:56:05 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1045"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"response\": {\n        \"ativacao\": true,\n        \"expiracao\": \"00000000\",\n        \"licencas\": [\n            {\n                \"componente\": \"1\",\n                \"chave\": \"pEzGO0J1WKTZFN82C94-F32UJPFVOk5pd0TfpA40OhkF2RLxGkleDnJy0XVo9dG4G_xwLDSzOjU_V8pWO4ZPO_W-POzhi3G5CraFooh8duxIgnB926uCfoGM4S2S7PV6Ip4sdzDbB-i08ZpkId7GrxxH-ItJqXNPApVs0yDG-J_I2ULQVBtIaKRvA6wU94TerKBvcvcEAhy3v5JJHz1xRA..\",\n                \"chaveCriptografada\": \"1\",\n                \"componenteExpiracao\": \"20230831\"\n            },\n            {\n                \"componente\": \"2\",\n                \"chave\": \"8mtdaMUF8UQxiXpttvIdyrgAHnRsjjtxuMScv8eH4uWaCHRI8hAV8Jr56HJrPDPVB4D_GHkxQMlIZ3keKJNvWWP3fswAruGLP-lDYoQEmQN-tZMUYsIrBoeqrpI3BrbxTkxE6IXq91_BpL8vbNvqQwHe89iXpJx7iovPsZ0uu9KhOaMnvnlyqCgMbI5QOtesKB-zE8ugqIW2AnWEx1J1aQ..\",\n                \"chaveCriptografada\": \"1\",\n                \"componenteExpiracao\": \"20211231\"\n            },\n            {\n                \"componente\": \"3\",\n                \"chave\": \"8mtdaMUF8UQxiXpttvIdyrgAHnRsjjtxuMScv8eH4uWaCHRI8hAV8Jr56HJrPDPVB4D_GHkxQMlIZ3keKJNvWWP3fswAruGLP-lDYoQEmQN-tZMUYsIrBoeqrpI3BrbxTkxE6IXq91_BpL8vbNvqQwHe89iXpJx7iovPsZ0uu9KhOaMnvnlyqCgMbI5QOtesKB-zE8ugqIW2AnWEx1J1aQ..\",\n                \"chaveCriptografada\": \"1\",\n                \"componenteExpiracao\": \"20211231\"\n            }\n        ]\n    },\n    \"capFrenteAtualizado\": true,\n    \"capVersoAtualizado\": true\n}"
						}
					]
				}
			]
		},
		{
			"name": "is live",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"params\": {\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"ambiente\": \"{{ambiente}}\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/islive.php",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"islive.php"
					]
				},
				"description": "## Is Live\n\nCheca se a conexão está ativa e o mesmo tempo se os dados de autenticação são válidos\n\n***service*** (string): Serviço a ser solicitado caso o envio seja apara o endpoit *services.php*. Nâo é necessário caso o endpoint seja *islive.php*\n\n#### Parâmetros:\n\n***username, password, ambiente***: Vide variáveis da coleção\n\n#### Retorno em caso de sucesso\n\nHTTP Status Code 200\n\n***status*** (boolean): true\n\n***message*** (string): Mensagem de sucesso"
			},
			"response": [
				{
					"name": "200",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"service\": \"isLive\",\r\n    \"params\": {\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"ambiente\": \"{{ambiente}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/services.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"services.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-store, no-cache, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "Expires",
							"value": "Thu, 19 Nov 1981 08:52:00 GMT"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/10.0"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/7.3.7"
						},
						{
							"key": "Date",
							"value": "Mon, 19 Jul 2021 13:40:42 GMT"
						},
						{
							"key": "Content-Length",
							"value": "55"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"message\": [\n        \"Dados de acesso corretos.\"\n    ]\n}"
				}
			]
		},
		{
			"name": "session create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"service\": \"sessionCreate\",\r\n    \"params\": {\r\n        \"ambiente\": \"{{ambiente}}\",\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"idapp\": \"{{idapp}}\",\r\n        \"chave\": \"{{chave}}\",\r\n        \"agencia\": 1234,\r\n        \"conta\": 123456,\r\n        \"quantidade\": 1,\r\n        \"valorTotal\": 200,\r\n        \"informado\": [\r\n            {\r\n                \"cmc7\": \"341632690180006615141970304725\",\r\n                \"datavenc\": \"2021-12-21\"\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/sessioncreate.php",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"sessioncreate.php"
					]
				},
				"description": "## Session Create\n\nEsse serviço tem como finalidade a criação de uma sessão previa no ezCheckNet com informações sobre a remessa de documentos que será enviada e/ou capturada nos serviços  \nsubsequentes. A requisição, se válida, retornará um token que deverá ser enviado com as requisições posteriores, conforme documentação de cada serviço.\n\n#### Parâmetros:\n\n*   ***ambiente, username, password, idapp, chave***: Vide variáveis da coleção\n*   ***agencia*** (integer): Agência do depositante\n*   ***conta*** (integer): Conta do depositante\n*   ***quantidade*** (integer): Quantidade de cheques a enviar\n*   ***valorTotal*** (integer): Valor somado dos cheques a serem enviados. Considerar  \n    as duas últimas casas como decimais. Ex: 32422 = R$324,22\n*   ***bordero*** (numeric) (opcional): Número do borderô para a transação\n*   informado (array)(opcional): Array contendo um objeto com dados para cada cheque informado previamente. Os cheques capturados e enviados a seguir, caso esse parâmetro seja envido (e esteja configurado para as regras de negócio do ambiente) deverão conter os dados previamente informados aqui. Os dados possíveis de serm previamente informados são:\n    *   cmc7 (string): código CMC7 do cheque\n    *   datavenc (string): data para vencimento do cheque no formato YYYY-MM-DD\n\n#### Retorno em caso de sucesso:\n\n*   ***status*** (boolean): true\n*   ***response*** (object):\n    *   ***msg*** (string): Mensagem de sucesso\n    *   ***token*** (string): Token gerado para uso em requisições subsequentes"
			},
			"response": [
				{
					"name": "200",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"service\": \"sessionCreate\",\r\n    \"params\": {\r\n        \"ambiente\": \"{{ambiente}}\",\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"agencia\": 1234,\r\n        \"conta\": 123456,\r\n        \"bordero\": 0,\r\n        \"quantidade\": 1,\r\n        \"valorTotal\": 100000,\r\n        \"idapp\": \"{{idapp}}\",\r\n        \"chave\": \"{{chave}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/services.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"services.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-store, no-cache, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "Expires",
							"value": "Thu, 19 Nov 1981 08:52:00 GMT"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/10.0"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/7.3.7"
						},
						{
							"key": "Set-Cookie",
							"value": "PHPSESSID=k4jlng750s1i2onbpv1ni089iv; path=/; HttpOnly"
						},
						{
							"key": "Date",
							"value": "Mon, 19 Jul 2021 14:51:18 GMT"
						},
						{
							"key": "Content-Length",
							"value": "125"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"response\": {\n        \"msg\": \"Token de sessao gerado com sucesso\",\n        \"token\": \"dCVld8jsjqSOkRsje0zLcOeZ-1dTsJDTMkHacieMmEw\"\n    }\n}"
				},
				{
					"name": "200 - Informados",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"service\": \"sessionCreate\",\r\n    \"params\": {\r\n        \"ambiente\": \"{{ambiente}}\",\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"idapp\": \"{{idapp}}\",\r\n        \"chave\": \"{{chave}}\",\r\n        \"agencia\": 1234,\r\n        \"conta\": 123456,\r\n        \"quantidade\": 1,\r\n        \"valorTotal\": 100,\r\n        \"informado\": [\r\n            {\r\n                \"cmc7\": \"341632690180006615141970304725\",\r\n                \"datavenc\": \"2021-12-31\"\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/services.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"services.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Mon, 13 Dec 2021 15:30:38 GMT"
						},
						{
							"key": "Content-Length",
							"value": "125"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"response\": {\n        \"msg\": \"Token de sessao gerado com sucesso\",\n        \"token\": \"HkumzJbyKWhblYx8ZVEgtMkJjAsA8Ye6nPRhb7MTumo\"\n    }\n}"
				}
			]
		},
		{
			"name": "apicheck",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"infoAdicionais\": [\r\n        {\r\n            \"seq\": 1,\r\n            \"idunicod\": \"{{idunicod}}\"\r\n        }\r\n    ],\r\n    \"remessa\": {\r\n        \"origem\": 100,\r\n        \"token\": \"{{token}}\",\r\n        \"plataforma\": {\r\n            \"os\": \"android\",\r\n            \"osVersion\": \"7.0\",\r\n            \"sdkVersion\": \"1.1.1.0\"\r\n        },\r\n        \"dadosAux\": {\r\n            \"dado1\": \"valor-para-o-dado-1\",\r\n            \"dado2\": \"valor-para-o-dado-2\"\r\n        },\r\n        \"cheques\": [\r\n            {\r\n                \"seq\": 1,\r\n                \"cmc7\": \"085010250160000065500001263060\",\r\n                \"valor\": \"200\",\r\n                \"valorext\": \"200\",\r\n                \"formaliza\": \"38\",\r\n                \"criptografado\": 0,\r\n                \"tipoImg\": 4,\r\n                \"dpi\": 200,\r\n                \"imgF\": \"{{imgf}}\",\r\n                \"imgV\": \"{{imgv}}\"\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/apicheck.php",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"apicheck.php"
					]
				},
				"description": "## ApiCheck\n\nEsse serviço tem como finalidade o envio de cheques para importação via API para o sistema ezCheckNET. O procedimento consiste, basicamente, no envio das imagens e dados adicionais para o serviço apicheck. A requisição deve ser precedida pelo serviço “sessionCreate” e acompanhada do token gerado por ele.\n\nEssa requisição é composta por dois parâmetros principais que se subdividem. O parâmetro “infoAdicionais” contém dados de identificação posterior dos cheques. O parâmetro “remessa” contém dados de autenticação bem como as imagens dos cheques e metadados referentes aos mesmos. Em geral, os dados contidos na remessa são fornecidos pelo SDK Sincronica, se essa for a regra de negócio pré-definida.\n\n#### Parâmetros\n\n- ***infoAdicionais*** (array) (opcional): Array de objetos com dados de identificação posterior de cada cheque a ser enviado no campo ***remessa -> cheques***\n  - ***seq*** (integer): Sequencial do cheque a idêntico ao enviado no campo ***remessa -> cheques*** \n  - ***idunicod*** (string): Identificador único para localização posterior do cheque\n\n- ***remessa*** (object): Dados de autenticação, metadados de cheques e imagens\n  - ***origem*** (integer) (opcional) (default = 100): Origem da captura – 60 para ATM, 90 para Chatbot ou 100 para Mobile\n  - ***token*** (string): Token de autenticação previamente recebido na requisição ao serviço sessionCreate\n  - ***plataforma*** (object): Dados da plataforma do aplicativo\n    - ***os*** (string): Sistema operacional\n    - ***osVersion*** (string): Versão do sistema\n    - ***sdkVersion*** (string): Versão do SDK\n  - ***dadosAux*** (object): Quaisquer dados auxiliares *sobre a remessa* que poderão ser recuperados em consultas posteriores\n  - ***cheques*** (array): Array de objetos com dados, identificadores e imagens dos cheques a serem enviados\n    - ***seq*** (integer): Número sequencial do cheque descrito em infoAdicionais\n    - ***cmc7*** (string): Código CMC7 do cheque\n    - ***valor*** (string): Valor capturado do cheque considerando as duas últimas casas como decimais\n    - ***valorExt*** (string): Valor por extenso do cheque\n    - ***formaliza*** (integer) (opcional): Contém possíveis erros de formalização do cheque (valor por extenso, assinatura…)\n    - ***criptografado*** (integer): Informa se as imagens enviadas (frente e verso) estão criptografadas (1) ou não (0)\n    - ***tipoimg*** (integer) : Formato de imagem: 1 para JPG, 3 para PNG ou 12 TIFF\n    - ***dpi*** (integer): Resolução da imagem. Deve ser 100, 200 ou 300\n    - ***data*** (string): Data boa para o cheque no formato yyyy-mm-dd\n    - ***imgF*** (string): String base64 da imagem de frente do cheque\n    - ***imgV*** (string): String base64 da imagem de verso do cheque"
			},
			"response": [
				{
					"name": "200",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"infoAdicionais\": [\r\n        {\r\n            \"seq\": 0,\r\n            \"idunicod\": \"{{idunicod}}\"\r\n        }\r\n    ],\r\n    \"remessa\": {\r\n        \"origem\": 100,\r\n        \"token\": \"{{token}}\",\r\n        \"plataforma\": {\r\n            \"os\": \"android\",\r\n            \"osVersion\": \"7.0\",\r\n            \"sdkVersion\": \"1.1.1.0\"\r\n        },\r\n        \"dadosAux\": {\r\n            \"dado1\" : \"valor-para-o-dado-1\",\r\n            \"dado2\" : \"valor-para-o-dado-2\"\r\n        },\r\n        \"cheques\": [\r\n            {\r\n                \"seq\": 0,\r\n                \"cmc7\": \"748534280180000015500006709166\",\r\n                \"valor\": \"100000\",\r\n                \"valorext\": \"100000\",\r\n                \"formaliza\": \"38\",\r\n                \"criptografado\": 0,\r\n                \"tipoImg\": 4,\r\n                \"dpi\": 200,\r\n                \"imgF\": \"{{imgf}}\",\r\n                \"imgV\": \"{{imgv}}\"\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/apicheck.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"apicheck.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-store, no-cache, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "Expires",
							"value": "Thu, 19 Nov 1981 08:52:00 GMT"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/10.0"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/7.3.7"
						},
						{
							"key": "Date",
							"value": "Tue, 20 Jul 2021 16:05:25 GMT"
						},
						{
							"key": "Content-Length",
							"value": "15"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true\n}"
				},
				{
					"name": "401",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"infoAdicionais\": [\r\n        {\r\n            \"seq\": 0,\r\n            \"idunicod\": \"{{idunicod}}\"\r\n        }\r\n    ],\r\n    \"remessa\": {\r\n        \"origem\": 100,\r\n        \"token\": \"{{token}}\",\r\n        \"plataforma\": {\r\n            \"os\": \"android\",\r\n            \"osVersion\": \"7.0\",\r\n            \"sdkVersion\": \"1.1.1.0\"\r\n        },\r\n        \"dadosAux\": {\r\n            \"dado1\" : \"valor-para-o-dado-1\",\r\n            \"dado2\" : \"valor-para-o-dado-2\"\r\n        },\r\n        \"cheques\": [\r\n            {\r\n                \"seq\": 0,\r\n                \"cmc7\": \"748534280180000015500006709166\",\r\n                \"valor\": \"100000\",\r\n                \"valorext\": \"100000\",\r\n                \"formaliza\": \"38\",\r\n                \"criptografado\": 0,\r\n                \"tipoImg\": 4,\r\n                \"dpi\": 200,\r\n                \"imgF\": \"{{imgf}}\",\r\n                \"imgV\": \"{{imgv}}\"\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/apicheck.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"apicheck.php"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-store, no-cache, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "Expires",
							"value": "Thu, 19 Nov 1981 08:52:00 GMT"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/10.0"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/7.3.7"
						},
						{
							"key": "Date",
							"value": "Tue, 20 Jul 2021 16:03:48 GMT"
						},
						{
							"key": "Content-Length",
							"value": "79"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"response\": [\n        {\n            \"code\": 10,\n            \"msg\": \"Token invalido ou inexistente\"\n        }\n    ]\n}"
				},
				{
					"name": "422",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"infoAdicionais\": [\r\n        {\r\n            \"seq\": 0,\r\n            \"idunicod\": \"{{idunicod}}\"\r\n        }\r\n    ],\r\n    \"remessa\": {\r\n        \"origem\": 100,\r\n        \"token\": \"{{token}}\",\r\n        \"plataforma\": {\r\n            \"os\": \"android\",\r\n            \"osVersion\": \"7.0\",\r\n            \"sdkVersion\": \"1.1.1.0\"\r\n        },\r\n        \"dadosAux\": {\r\n            \"dado1\" : \"valor-para-o-dado-1\",\r\n            \"dado2\" : \"valor-para-o-dado-2\"\r\n        },\r\n        \"cheques\": [\r\n            {\r\n                \"seq\": 0,\r\n                \"cmc7\": \"748534280180000015500006709167\",\r\n                \"valor\": \"100000\",\r\n                \"valorext\": \"100000\",\r\n                \"formaliza\": \"38\",\r\n                \"criptografado\": 0,\r\n                \"tipoImg\": 4,\r\n                \"dpi\": 200,\r\n                \"imgF\": \"{{imgf}}\",\r\n                \"imgV\": \"{{imgv}}\"\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/apicheck.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"apicheck.php"
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-store, no-cache, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "Expires",
							"value": "Thu, 19 Nov 1981 08:52:00 GMT"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/10.0"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/7.3.7"
						},
						{
							"key": "Date",
							"value": "Tue, 20 Jul 2021 16:05:53 GMT"
						},
						{
							"key": "Content-Length",
							"value": "105"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"errors\": [\n        {\n            \"Cheque\": \"748534280180000015500006709167\",\n            \"Mensagem\": \"Codigo CMC7 Invalido\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "session query",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"service\": \"sessionquery\",\r\n    \"params\": {\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"ambiente\": \"{{ambiente}}\",\r\n        \"token\": \"{{token}}\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/sessionquery.php",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"sessionquery.php"
					]
				},
				"description": "## Session Query\n\nTem como finalidade a consulta de status de uma remessa capturada via Web (navegador) através de acesso externo de clientes vindos de IB, por exemplo, seja por janelas popup ou iframe. Após a conclusão da operação por parte do usuário final (ou abandono por algum motivo) o cliente pode efetuar a consulta para saber os CMC7's, valores e status de importação dos cheques da remessa.\n\n#### Parâmetros:\n\n*   ***username***, ***password*** e ***ambiente***: vide documentação geral da collection\n*   ***token*** (string): Token gerado através do serviço session create antes do usuário ser direcionado para a página de digitalização\n    \n\n#### Retornos possíveis\n\nCaso a remessa tenha sido finalizada (cheques capturados e enviados):\n\n**http status: 200**\n\n*   ***status*** (boolean): true\n*   ***reponse*** (object): dados da remessa e dos cheques capturados\n    *   ***bordero*** (string): Identificação do borderô da remessa, caso tenha sido informado\n    *   ***agencia*** (numeric): agência do depositante\n    *   ***conta*** (numeric): conta do depositante\n    *   ***inicio*** (string): data/hora do início da sessão no formato YYYY-MM-DD HH:MM:SS\n    *   ***fim*** (string): data/hora do fim da sessão no formato YYYY-MM-DD HH:MM:SS\n    *   ***quantidade*** (integer): quantidade de cheques capturados\n    *   ***valorTotal*** (integer): soma dos valores de todos os cheques capturados. os dois últimos digitos devem ser considerados decimais. ex: 456500 = R$4.565,00\n    *   ***import*** (boolean): true para remessa já importada para o backoffice, false para pendende de importação\n    *   ***cheques*** (array): Cada objeto do array representa os dados de um cheque capturado na remessa\n        *   ***CMC7*** (string) : código CMC7 do cheque capturado\n        *   ***VALOR*** (integer): valor do cheque capturado no mesmo formato do parâmetro valorTotal\n        *   ***DATAVENC*** (string): data do vencimento do cheque caso haja no formato YYYY-MM-DD\n        *   ***IDENTIFICADOR*** (string): código identificador para futura localização do cheque, caso haja\n\nCaso a remessa não tenha sido finalizada por desistência ou abandono do usuário (cheques não submetidos)\n\n**http status: 200**\n\n*   ***status*** (boolean): false\n*   ***response*** (array): array onde cada objeto contém um possível erro para a operação\n    *   ***code*** (integer): código de erro interno do ezCheck.Net, nesse caso, código 6\n    *   ***msg*** (string): mensagem de erro, nesse caso \"A sessao nao foi concluida\"\n\nEm caso de erros na requisição o formato é o mesmo informado acima, porém com http status 400, ou 500 para erro interno no servidor e, nesse caso, o corpo da resposta pode não existir"
			},
			"response": [
				{
					"name": "sessão não finalizada",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"service\": \"sessionquery\",\r\n    \"params\": {\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"ambiente\": \"{{ambiente}}\",\r\n        \"token\": \"{{token}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/services.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"services.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-store, no-cache, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "Expires",
							"value": "Thu, 19 Nov 1981 08:52:00 GMT"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/10.0"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/7.3.7"
						},
						{
							"key": "Date",
							"value": "Mon, 23 Aug 2021 14:10:19 GMT"
						},
						{
							"key": "Content-Length",
							"value": "75"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"response\": [\n        {\n            \"code\": 6,\n            \"msg\": \"A sessao nao foi concluida\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "session status",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"service\": \"sessionStatus\",\r\n    \"params\": {\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"ambiente\": \"{{ambiente}}\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/sessionstatus.php",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"sessionstatus.php"
					]
				},
				"description": "## Session Status\n\nTem como objetivo criar um token para consultas de status de remessas ou cheques que não tenham sido capturados via webscan.\n\n#### Parâmetros:\n\n*   ***username, password e ambiente***: vide documentação geral da collection\n    \n\nRetorno em caso de sucesso:\n\n**http status code 200**\n\n*   ***status*** (boolean): true\n*   ***response*** (object):\n    *   ***msg*** (string): mensagem de sucesso\n    *   ***token*** (string): token de sessão gerado para próximas requisições\n\nRetorno em caso de erro: default - vide documentação geral da collection"
			},
			"response": [
				{
					"name": "200",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"service\": \"sessionStatus\",\r\n    \"params\": {\r\n        \"username\": \"{{usuario}}\",\r\n        \"password\": \"{{senha}}\",\r\n        \"ambiente\": \"{{ambiente}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/services.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"services.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-store, no-cache, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "Expires",
							"value": "Thu, 19 Nov 1981 08:52:00 GMT"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/10.0"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/7.3.7"
						},
						{
							"key": "Set-Cookie",
							"value": "PHPSESSID=dv6hutpadf17htqf9mo17c3kac; path=/; HttpOnly"
						},
						{
							"key": "Date",
							"value": "Tue, 20 Jul 2021 20:27:34 GMT"
						},
						{
							"key": "Content-Length",
							"value": "125"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"response\": {\n        \"msg\": \"Token de sessao gerado com sucesso\",\n        \"token\": \"zyXwNEkMzRwOwU2jDQU4BjTBY8gy2aGv3ky1bANH-mY\"\n    }\n}"
				}
			]
		},
		{
			"name": "change status",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"idunicod\": \"{{idunicod}}\",\r\n    \"status\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/changestatus.php",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"changestatus.php"
					]
				},
				"description": "## Change Status\n\nAltera o status de um cheque específico através do seu identificador para fins de testes de homologação. Esse serviço só estará disponível caso a aplicação ezCheck.Net estiver configurada com a flag ***AMBIENTE_DE_PRODUCAO*** = false\n\n#### Parâmetros:\n\n*   token (string): Token gerado através do serviço session status\n*   idunicod (string): Identificador único do cheque\n*   status (integer): Novo status do cheque sendo:\n    *   0 => Pendente de importação para backoffice\n    *   1 => Importado no backoffice\n    *   2 => Processado pelo backoffice\n    *   3 => Importado para a base Canoa\n\n#### Retornos possíveis:\n\nVide exemplos de http status 200, 400 e 401 em anexo"
			},
			"response": [
				{
					"name": "200",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"idunicod\": \"{{idunicod}}\",\r\n    \"status\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/changestatus.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"changestatus.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Dec 2021 12:38:17 GMT"
						},
						{
							"key": "Content-Length",
							"value": "102"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"idunicod\": \"e46d2a5600869f1ac0d5bcdffe858c3c\",\n    \"mensagem\": \"Status alterado com sucesso\"\n}"
				},
				{
					"name": "400",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"idunicod\": \"{{idunicod}}\",\r\n    \"status\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/changestatus.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"changestatus.php"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Dec 2021 12:44:44 GMT"
						},
						{
							"key": "Content-Length",
							"value": "54"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"mensagem\": \"Cheque ja foi processado\"\n}"
				},
				{
					"name": "401",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"idunicod\": \"{{idunicod}}\",\r\n    \"status\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/changestatus.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"changestatus.php"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Dec 2021 12:45:47 GMT"
						},
						{
							"key": "Content-Length",
							"value": "79"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"response\": [\n        {\n            \"code\": 10,\n            \"msg\": \"Token invalido ou inexistente\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "status interval",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"params\": {\r\n        \"status\": 0,\r\n        \"intervalo\": {\r\n            \"inicio\": \"2020-01-01\",\r\n            \"fim\": \"2022-12-31\"\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/status.php",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"status.php"
					]
				},
				"description": "## Status Interval\n\nPesquisa pro status de cheques capturados dentro de um intervalo de tempo (datas) especificado.\n\n#### Parâmetros:\n\n*   ***token*** (string): Token gerado pelo serviço ***session status***\n*   ***params*** (object)\n    *   ***status*** (integer): Status dos cheques a consultar sendo 0 para não processado, 1 para processado pelo backoffice e aceito e 2 para processado pelo backoffice e rejeitado\n    *   ***intervalo*** (object): Objeto contendo as datas a pesquisar\n        *   ***inicio*** (string): Datetime no formato YYYY-MM-DD com a data de início da pesquisa\n        *   ***fim*** (string): Datetime no formato YYYY-MM-DD com a data final da pesquisa\n\n#### Retorno em caso de sucesso:\n\n*   ***status*** (boolean) true\n*   ***cheques*** (array): array contendo objetos com informações dos cheques capturados\n    *   ***idunicod*** (string): identificador único do cheque\n    *   ***cmc7*** (string: Código CMC7 do cheque\n    *   ***datacaptura*** (string): Datetime da captura do cheque no formato YYYY-MM-DD HH:MM:SS\n    *   ***status*** (integer): Status do cheque sendo 0 para não processado, 1 para processado pelo backoffice e aceito e 2 para processado pelo backoffice e rejeitado\n    *   ***motivo*** (array): Array de objetos contendo informações sobre os motivos de rejeição do cheque\n        *   ***code*** (integer): código de rejeição do cheque\n        *   ***msg*** (string): Mensagem com o motivo de rejeição do cheque\n\nVide exemplos de retornos possíveis em anexo"
			},
			"response": [
				{
					"name": "200",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"params\": {\r\n        \"status\": 0,\r\n        \"intervalo\": {\r\n            \"inicio\": \"2021-11-29\",\r\n            \"fim\": \"2021-11-30\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/status.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"status.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Dec 2021 13:23:08 GMT"
						},
						{
							"key": "Content-Length",
							"value": "338"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"cheques\": [\n        {\n            \"idunicod\": \"0\",\n            \"cmc7\": \"085010250160000065500001263060\",\n            \"datacaptura\": \"2021-11-30\",\n            \"status\": 0,\n            \"motivo\": [\n                {\n                    \"code\": 0,\n                    \"msg\": \"Nao processado\"\n                }\n            ]\n        },\n        {\n            \"idunicod\": \"1a62df0b1f59e7cea2b12ca25f3908ff\",\n            \"cmc7\": \"085010250160000065500001263060\",\n            \"datacaptura\": \"2021-11-30\",\n            \"status\": 0,\n            \"motivo\": [\n                {\n                    \"code\": 0,\n                    \"msg\": \"Nao processado\"\n                }\n            ]\n        }\n    ]\n}"
				},
				{
					"name": "400",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"params\": {\r\n        \"status\": 0,\r\n        \"intervalo\": {\r\n            \"inicio\": \"2020-11-29\",\r\n            \"fim\": \"2020-11-30\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/status.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"status.php"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Dec 2021 14:24:39 GMT"
						},
						{
							"key": "Content-Length",
							"value": "97"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"response\": [\n        {\n            \"code\": 401,\n            \"msg\": \"Nao existem cheques com esse status no momento\"\n        }\n    ]\n}"
				},
				{
					"name": "400 - Data Inválida",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"params\": {\r\n        \"status\": 0,\r\n        \"intervalo\": {\r\n            \"inicio\": \"2020-11-\",\r\n            \"fim\": \"2020-11-30\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/status.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"status.php"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Dec 2021 14:41:49 GMT"
						},
						{
							"key": "Content-Length",
							"value": "81"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"response\": [\n        {\n            \"code\": 406,\n            \"msg\": \"Data inicial ou final invalida\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "status idunicod",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"params\": {\r\n        \"idunicod\": \"{{idunicod}}\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/status.php",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"status.php"
					]
				},
				"description": "## Status Id Único\n\nTem como finalidade pesquisar o status de um cheque específico através do seu identificador único.\n\n#### Parâmetros:\n\n*   ***token*** (string): token gerado através do serviço ***session status***\n*   ***params***: (object)\n    *   ***idunicod*** (string): identificador único do cheque\n\n#### Retorno em caso de sucesso:\n\n*   ***status*** (boolean): true\n*   ***cheques*** (array): array contendo um objeto de cheque. Embora seja retornado apenas um cheque, o array de objetos foi mantido nesse retorno para conservar a compatibilidade com o retorno do serviço \"***status intervalo***\" também documentado nessa collection.\n    *   ***idunicod*** (string): identificador único do cheque\n    *   ***cmc7*** (string: Código CMC7 do cheque\n    *   ***datacaptura*** (string): Datetime da captura do cheque no formato YYYY-MM-DD HH:MM:SS\n    *   ***status*** (integer): Status do cheque sendo 0 para não processado, 1 para processado pelo backoffice e aceito e 2 para processado pelo backoffice e rejeitado\n    *   ***motivo*** (array): Array de objetos contendo informações sobre os motivos de rejeição do cheque\n        *   ***code*** (integer): código de rejeição do cheque\n        *   ***msg*** (string): Mensagem com o motivo de rejeição do cheque\n\nVide exemplos de retorno em anexo."
			},
			"response": [
				{
					"name": "200 - Não processado",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"params\": {\r\n        \"idunicod\": \"{{idunicod}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/status.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"status.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Dec 2021 12:57:19 GMT"
						},
						{
							"key": "Content-Length",
							"value": "211"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"cheques\": [\n        {\n            \"idunicod\": \"e46d2a5600869f1ac0d5bcdffe858c3c\",\n            \"cmc7\": \"085010250160000065500001263060\",\n            \"datacaptura\": \"2021-11-30 14:05:57.000\",\n            \"status\": 0,\n            \"motivo\": [\n                {\n                    \"code\": 0,\n                    \"msg\": \"Nao processado\"\n                }\n            ]\n        }\n    ]\n}"
				},
				{
					"name": "200 - Aceito",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"params\": {\r\n        \"idunicod\": \"{{idunicod}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/status.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"status.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Dec 2021 12:54:30 GMT"
						},
						{
							"key": "Content-Length",
							"value": "203"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"cheques\": [\n        {\n            \"idunicod\": \"e46d2a5600869f1ac0d5bcdffe858c3c\",\n            \"cmc7\": \"085010250160000065500001263060\",\n            \"datacaptura\": \"2021-11-30 14:05:57.000\",\n            \"status\": 1,\n            \"motivo\": [\n                {\n                    \"code\": 1,\n                    \"msg\": \"Aceito\"\n                }\n            ]\n        }\n    ]\n}"
				},
				{
					"name": "200 - Rejeitado",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"{{token}}\",\r\n    \"params\": {\r\n        \"idunicod\": \"{{idunicod}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/status.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"status.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Dec 2021 13:16:37 GMT"
						},
						{
							"key": "Content-Length",
							"value": "213"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"cheques\": [\n        {\n            \"idunicod\": \"e46d2a5600869f1ac0d5bcdffe858c3c\",\n            \"cmc7\": \"085010250160000065500001263060\",\n            \"datacaptura\": \"2021-11-30 14:05:57.000\",\n            \"status\": 2,\n            \"motivo\": [\n                {\n                    \"code\": 10,\n                    \"msg\": \"Linha digitavel\"\n                }\n            ]\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "status idunicod image",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"token\"        : \"{{token}}\",\r\n\t\"idunicod\"     : \"{{idunicod}}\",\r\n\t\"imagem_verso\" : true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/statusimg.php",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"statusimg.php"
					]
				},
				"description": "## Status Idunicod Image\n\nObtem o status de um cheque específico através do seu identificador único retornando também as imagens de frente e verso\n\n#### Parâmetros:\n\n*   ***token*** (string): Token gerado através do serviço session status\n*   ***idunicod*** (string): Identificador único do cheque\n*   ***imagem_verso*** (boolean): true para retornar a imagem de verso do cheque (além da frontal)\n    \n\n#### Retorno em caso de sucesso:\n\n*   ***status*** (boolean): true\n*   ***idunicod*** (string): identificador único do cheque\n*   ***cmc7*** (string): Código CMC7 do cheque\n*   ***cheque_status*** (string): Mensagem de status do cheque: Não processado, Aceito ou Rejeitado\n*   ***imagem_frente*** (string): Buffer em Base 64 da imagem de frente do cheque\n*   ***imagem_verso*** (string): Buffer em Base 64 da imagem de verso do cheque caso tenha sido solicitada\n    \n\nVide exemplos de retorno com http status 200 e 400 em anexo"
			},
			"response": [
				{
					"name": "200 - Rejeitado",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"token\"        : \"{{token}}\",\r\n\t\"idunicod\"     : \"{{idunicod}}\",\r\n\t\"imagem_verso\" : true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/statusimg.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"statusimg.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Dec 2021 14:44:20 GMT"
						},
						{
							"key": "Content-Length",
							"value": "39978"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"idunicod\": \"e46d2a5600869f1ac0d5bcdffe858c3c\",\n    \"cmc7\": \"085010250160000065500001263060\",\n    \"cheque_status\": \"Rejeitado\",\n    \"motivos\": [\n        {\n            \"code\": 10,\n            \"msg\": \"Linha digitavel\"\n        }\n    ],\n    \"imagem_frente\": \"\",\n    \"imagem_verso\": \"\"\n}"
				},
				{
					"name": "200 - Aceito",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"token\"        : \"{{token}}\",\r\n\t\"idunicod\"     : \"{{idunicod}}\",\r\n\t\"imagem_verso\" : true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/statusimg.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"statusimg.php"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Dec 2021 14:45:08 GMT"
						},
						{
							"key": "Content-Length",
							"value": "39927"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": true,\n    \"idunicod\": \"e46d2a5600869f1ac0d5bcdffe858c3c\",\n    \"cmc7\": \"085010250160000065500001263060\",\n    \"cheque_status\": \"Aceito\",\n    \"imagem_frente\": \"\",\n    \"imagem_verso\": \"\"\n}"
				},
				{
					"name": "400",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"token\"        : \"{{token}}\",\r\n\t\"idunicod\"     : \"{{idunicod}}\",\r\n\t\"imagem_verso\" : true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/statusimg.php",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"statusimg.php"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Date",
							"value": "Thu, 09 Dec 2021 14:53:38 GMT"
						},
						{
							"key": "Content-Length",
							"value": "70"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": false,\n    \"response\": [\n        {\n            \"code\": 1,\n            \"msg\": \"Cheque nao encontrado\"\n        }\n    ]\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "ezchecknet.sincronica.com.br"
		},
		{
			"key": "usuario",
			"value": "usuario"
		},
		{
			"key": "senha",
			"value": "senha"
		},
		{
			"key": "ambiente",
			"value": "ambiente"
		},
		{
			"key": "token",
			"value": "string_de_token_gerado_anteriormente"
		},
		{
			"key": "idapp",
			"value": "br.sincronica.kanoaapp"
		},
		{
			"key": "chave",
			"value": "55B34724BAEE18207022F0B7DF407CD78"
		},
		{
			"key": "imgf",
			"value": ""
		},
		{
			"key": "imgv",
			"value": "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"
		},
		{
			"key": "idunicod",
			"value": "e46d2a5600869f1ac0d5bcdffe858c3c"
		}
	]
}